
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
      
model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String?
  username          String    @unique
  name              String?
  role              String    @default("user")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  bindles           Bindle[]
  authentications   Authentication[]
  notifications     Notification[]
}

model Bindle {
  id                Int       @id @default(autoincrement())
  title             String
  content           String
  organizedContent  Json?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])

  cloudSyncs        CloudSync[]
}

model CloudSync {
  id                Int       @id @default(autoincrement())
  bindleId          Int
  cloudAppId        Int
  syncStatus        String
  lastSyncTime      DateTime
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  bindle            Bindle    @relation(fields: [bindleId], references: [id])
  cloudApp          CloudApp  @relation(fields: [cloudAppId], references: [id])
}

model CloudApp {
  id                Int       @id @default(autoincrement())
  name              String
  apiEndpoint       String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  cloudSyncs        CloudSync[]
}

model Authentication {
  id                Int       @id @default(autoincrement())
  userId            Int
  method            String
  providerId        String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user              User      @relation(fields: [userId], references: [id])
}

model Notification {
  id                Int       @id @default(autoincrement())
  userId            Int
  message           String
  type              String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user              User      @relation(fields: [userId], references: [id])
}